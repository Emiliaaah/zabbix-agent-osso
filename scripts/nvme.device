#!/bin/sh
# [This file is part of the zabbix-agent-osso package]
# RECOMMENDS: nvme-cli (only on hardware nodes)
#
# UserParameter=nvme.device.discover, /etc/zabbix/scripts/nvme.device --discover
# UserParameter=nvme.device.smart[*], /etc/zabbix/scripts/nvme.device --smart "$1" "$2"
#

nvme_cli=/usr/sbin/nvme

get_smart_log_add() {
    if $nvme_cli intel --help >/dev/null 2>&1; then
        # nvme-cli>=1.5-1
        echo 'intel smart-log-add'
    else
        # nvme-cli>=0.5-1ubuntu0.2
        echo 'smart-log-add'
    fi
}


case $1 in
--has-disk)
    if grep -q ' nvme' /proc/diskstats; then
        echo 1
    else
        echo 0
    fi
    ;;
--discover)
    # {"data": [{"{#NVME}": "/dev/nvme0n1"}, {"{#NVME}": "/dev/nvme1n1"}]}
    output=$($nvme_cli list 2>/dev/null)
    if test $? -eq 0; then
        # Might be empty. No problem.
        echo "$output" | awk '\
        BEGIN { printf "{\"data\": [" }
        /^\//{ if(i)printf ", "; ++i; printf "{\"{#NVME}\": \"" $1 "\"}"; }
        END { print "]}" }'
    elif ! test -x $nvme_cli; then
        if find /dev -maxdepth 1 -name 'nvme*' | grep -q ''; then
            echo 'ERROR: Found nvme devices, but no nvme-cli installed' >&2
            exit 1
        fi
        echo '{"data": []}'
    else
        echo "$output" 2>&1 # strange!
        exit 1
    fi
    ;;

--smart)
    dev=$2
    attrib=$3
    if test -z "$dev" || test -z "$attrib"; then
        echo 'require DEVICE and ATTRIBUTE args' >&2
        exit 1
    fi
    case $attrib in
    crc_error_count|end_to_end_error_detection_count|erase_fail_count|\
    pll_lock_loss_count|program_fail_count|retry_buffer_overflow_count|\
    timed_workload_host_reads|timed_workload_media_wear)
        subcmd=$(get_smart_log_add)
        # program_fail_count              : 100%       0
        # erase_fail_count                : 100%       0
        # ...
        #  ^-- take raw value
        nth=2
        ;;
    wear_leveling)
        subcmd=$(get_smart_log_add)
        # wear_leveling                   : 100%       min: 0, max: 1, avg: 0
        #  ^-- take 100%
        nth=1
        ;;
    *)
        subcmd=smart-log
        # host_read_commands                  : 583,150
        # host_write_commands                 : 4,438,702
        # controller_busy_time                : 0
        nth=1
        ;;
    esac
    out=$($nvme_cli $subcmd $dev 2>&1)
    if test $? -ne 0; then
        echo "ERROR: $dev: $out" >&2
        exit 1
    fi
    val=$(echo "$out" | sed -e '
        /^'"$attrib"'[[:blank:]]*:/!d
        s/^[^:]*:[[:blank:]]*//;s/[^0-9 .]//g' |
        awk '{print int($'$nth')}')
    if test -z "$val"; then
        echo "ERROR: $dev: no attribute $attrib" >&2
        exit 1
    fi
    echo "$val"
esac
