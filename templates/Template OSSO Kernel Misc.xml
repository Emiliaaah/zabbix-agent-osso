<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>6.4</version>
    <template_groups>
        <template_group>
            <uuid>846977d1dfed4968bc5f8bdb363285bc</uuid>
            <name>Templates/Operating systems</name>
        </template_group>
    </template_groups>
    <templates>
        <template>
            <uuid>f36023b25b524cc1a434dc5928dc89f0</uuid>
            <template>Template OSSO Kernel Misc</template>
            <name>Template OSSO Kernel Misc</name>
            <groups>
                <group>
                    <name>Templates/Operating systems</name>
                </group>
            </groups>
            <items>
                <item>
                    <uuid>7e638503321e4a6d8dc9ea122d41d8da</uuid>
                    <name>IP routes with prohibit action</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>iproute.prohibit</key>
                    <delay>5m</delay>
                    <history>3d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <triggers>
                        <trigger>
                            <uuid>fe1c7df492fd40078fe055307d177434</uuid>
                            <expression>{$HAS_DISASTER}=1 and last(/Template OSSO Kernel Misc/iproute.prohibit)&lt;&gt;&quot;&quot;</expression>
                            <name>One or more IPs prohibited on {HOST.NAME}</name>
                            <opdata>Current: {ITEM.LASTVALUE}</opdata>
                            <priority>DISASTER</priority>
                            <description>This indicates maintenance somewhere. For instance OpenStack Swift nodes temporarily blocked from the Proxies because the nodes are faulty.

When the nodes are healthy, we want to resolve this trigger by removing the prohibit action.</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>b4f25ec9e43647aab7ad51214bfff4a3</uuid>
                    <name>Kernel emergency count</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>kernel.emerg.count</key>
                    <history>15d</history>
                    <trends>90d</trends>
                </item>
                <item>
                    <uuid>9298845365924fb6bf5856c6293d80d0</uuid>
                    <name>Kernel emergency log</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>kernel.emerg.log</key>
                    <history>3d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <uuid>a093a2958e8d41f7aa9bdbc12a1687df</uuid>
                    <name>Kernel entropy available</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>kernel.entropy</key>
                    <delay>270s</delay>
                    <history>1w</history>
                    <trends>90d</trends>
                    <description>Kernel entropy interval must not be 5m (using 4.5m). On some systems (Debian Stretch? Kernel 4.9.0-3? Systemd 232-25+deb9u1?) the entropy is reset every 5 minutes. Unsure who causes this, but it appears to be a system daemon (systemd-* or kernel itself); as turning off as many daemons as possible did not stop the entropy drain/reset.</description>
                    <request_method>POST</request_method>
                    <tags>
                        <tag>
                            <tag>Application</tag>
                            <value>Security</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>e97e14577bd9471ba09422db049e88ef</uuid>
                            <expression>max(/Template OSSO Kernel Misc/kernel.entropy,15m)&lt;40</expression>
                            <name>Not enough kernel entropy (&lt;40) on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger>
                        <trigger>
                            <uuid>51c8262b73994fb39f1e6b225dd2c850</uuid>
                            <expression>max(/Template OSSO Kernel Misc/kernel.entropy,15m)&lt;250</expression>
                            <name>Not enough kernel entropy (&lt;250) on {HOST.NAME}</name>
                            <status>DISABLED</status>
                            <priority>AVERAGE</priority>
                            <description>De trigger is een uitbreiding op de HIGH bij (&lt;40) om inzicht te krijgen of we veel nodes onder de 250 hebben zitten. Zekker VPN, LB, NATs zouden er baat bij hebben.
## Disabled - veel hits, moet even anders...</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>f80d7eb67a7544718c6b3e8646299ecd</uuid>
                    <name>Kernel slab memory</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>kernel.mem.slab</key>
                    <history>30d</history>
                    <trends>90d</trends>
                    <units>B</units>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <parameters>
                                <parameter>1024</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>Application</tag>
                            <value>Memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>c9a91a8a88cd4274be3da8c4748e68c0</uuid>
                    <name>Kernel total memory</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>kernel.mem.total</key>
                    <history>30d</history>
                    <trends>90d</trends>
                    <units>B</units>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <parameters>
                                <parameter>1024</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>Application</tag>
                            <value>Memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>c5088b4eccc1431193bd2ce0c49decc1</uuid>
                    <name>Host exit IPv4 address</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>net.get_ext_ip4</key>
                    <delay>20m</delay>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <inventory_link>HOST_ROUTER</inventory_link>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>Application</tag>
                            <value>Network interfaces</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>8ef341cb226d45b19f250e2c19ccb87e</uuid>
                    <name>Host exit IPv6 address</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>net.get_ext_ip6</key>
                    <delay>20m</delay>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>Application</tag>
                            <value>Network interfaces</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>85f6fa646cc84defb642becfc11fb7f7</uuid>
                    <name>Host has external IPv4 address</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>net.has_ext_ip4</key>
                    <delay>5m</delay>
                    <history>1w</history>
                    <trends>30d</trends>
                    <preprocessing>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <request_method>POST</request_method>
                    <tags>
                        <tag>
                            <tag>Application</tag>
                            <value>Network interfaces</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>62f85db20dd245c4bd3260d37962fcd8</uuid>
                    <name>Host has any IPv6 address</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>net.has_ext_ip6</key>
                    <delay>5m</delay>
                    <history>1w</history>
                    <trends>30d</trends>
                    <description>FIXME: This is a bit of a misnomer. Not only external v6 addresses are counted, also link-locals are. This is because on an external subnet, others in the same network can still access these hosts if they are not firewalled.</description>
                    <preprocessing>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <request_method>POST</request_method>
                    <tags>
                        <tag>
                            <tag>Application</tag>
                            <value>Network interfaces</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>76ffa42b789b4f54962a2ccb2a6771d1</uuid>
                    <name>Host stats TCP segments retransmitted</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>net.tcpretranssegs</key>
                    <history>1w</history>
                    <trends>30d</trends>
                    <request_method>POST</request_method>
                    <tags>
                        <tag>
                            <tag>Application</tag>
                            <value>Network interfaces</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>eaa239d09f9947239ee4d20cec0e1147</uuid>
                    <name>Host stats TCP segments retransmitted delta</name>
                    <type>CALCULATED</type>
                    <key>net.tcpretranssegs.delta</key>
                    <delay>30s</delay>
                    <params>change(//net.tcpretranssegs)</params>
                    <request_method>POST</request_method>
                    <tags>
                        <tag>
                            <tag>Application</tag>
                            <value>Network interfaces</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>e73058ebec08408aaee818d9305bb73b</uuid>
                    <name>Host stats TCPSynRetrans</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>net.tcpsynretrans</key>
                    <history>1w</history>
                    <trends>30d</trends>
                    <request_method>POST</request_method>
                    <tags>
                        <tag>
                            <tag>Application</tag>
                            <value>Network interfaces</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>adc260c2544b4975afefaa0ff98a0093</uuid>
                    <name>Host stats TCPSynRetrans delta</name>
                    <type>CALCULATED</type>
                    <key>net.tcpsynretrans.delta</key>
                    <delay>30s</delay>
                    <params>change(//net.tcpsynretrans)</params>
                    <request_method>POST</request_method>
                    <tags>
                        <tag>
                            <tag>Application</tag>
                            <value>Network interfaces</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>2fb3f93c4109464f9feb1dbbd948b866</uuid>
                    <name>CPU cores</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>system.cpu.cores</key>
                    <delay>1h</delay>
                    <history>1w</history>
                    <trends>90d</trends>
                    <units>cores</units>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <request_method>POST</request_method>
                    <tags>
                        <tag>
                            <tag>Application</tag>
                            <value>CPU</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>67731816287644e1a8bc29f2567fbc10</uuid>
                    <name>DMI bios</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>system.dmi.bios</key>
                    <delay>12h</delay>
                    <history>15d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <request_method>POST</request_method>
                    <tags>
                        <tag>
                            <tag>Application</tag>
                            <value>DMI</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>012a457d697a402b968277f650df5f17</uuid>
                    <name>DMI chassis</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>system.dmi.chassis</key>
                    <delay>12h</delay>
                    <history>15d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <request_method>POST</request_method>
                    <tags>
                        <tag>
                            <tag>Application</tag>
                            <value>DMI</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>dae2eb7bc5564237ae526ed626a28bf2</uuid>
                            <expression>{$DISABLE_ZBXNOHW}=0 and find(/Template OSSO Kernel Misc/system.dmi.chassis,,&quot;regexp&quot;,&quot;^QEMU|^Xen |lxcfs-in-proc&quot;)=0</expression>
                            <name>{HOST.NAME} lacks Zabbix Hardware tpl (cpu={ITEM.LASTVALUE1}, chassis={ITEM.LASTVALUE2})</name>
                            <priority>AVERAGE</priority>
                            <description>Either set DISABLE_ZBXNOHW=1 (through the Disable template) or add the Hardware template which sets it, and adds additional checks.</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>4d4fab784c1e494aab85e58bf9f604d9</uuid>
                    <name>DMI product</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>system.dmi.product</key>
                    <delay>12h</delay>
                    <history>15d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <request_method>POST</request_method>
                    <tags>
                        <tag>
                            <tag>Application</tag>
                            <value>DMI</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>6322f0ac972b474abf2b7cac146e6325</uuid>
                    <name>CPU model</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>system.hw.cpu[0,model]</key>
                    <delay>12h</delay>
                    <history>15d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <request_method>POST</request_method>
                    <tags>
                        <tag>
                            <tag>Application</tag>
                            <value>CPU</value>
                        </tag>
                    </tags>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <uuid>457118fd377b433f87a3e1c558e79156</uuid>
                    <name>Firewall IPv6 chains</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>net.ip6tables.discover_chains</key>
                    <delay>15m</delay>
                    <lifetime>3d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>f7dd6901b18d4c05b410d6c4092f59ac</uuid>
                            <name>Firewall IPv6 {#CHAIN} policy (0=accept)</name>
                            <type>ZABBIX_ACTIVE</type>
                            <key>net.ip6tables.policy[{#CHAIN}]</key>
                            <delay>30s</delay>
                            <history>1h</history>
                            <trends>90d</trends>
                            <units>ADR?</units>
                            <request_method>POST</request_method>
                            <tags>
                                <tag>
                                    <tag>Application</tag>
                                    <value>Firewall</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>c5a60a3a68764943856d95fa2e258df3</uuid>
                            <name>Firewall IPv6 {#CHAIN} rules</name>
                            <type>ZABBIX_ACTIVE</type>
                            <key>net.ip6tables.rules[{#CHAIN}]</key>
                            <delay>30s</delay>
                            <history>1h</history>
                            <trends>90d</trends>
                            <units>rules</units>
                            <request_method>POST</request_method>
                            <tags>
                                <tag>
                                    <tag>Application</tag>
                                    <value>Firewall</value>
                                </tag>
                            </tags>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <uuid>64017069df1a49b9bd8e8e957768744f</uuid>
                            <expression>{$DISABLE_FIREWALL}&lt;&gt;1 and
last(/Template OSSO Kernel Misc/net.has_ext_ip4)=1 and
last(/Template OSSO Kernel Misc/net.has_ext_ip6)=1 and
(max(/Template OSSO Kernel Misc/net.ip6tables.policy[{#CHAIN}],#2)=0 and
 max(/Template OSSO Kernel Misc/net.ip6tables.rules[{#CHAIN}],#2)=0)</expression>
                            <name>No IPv6 firewall in chain {#CHAIN} on {HOST.NAME}</name>
                            <priority>WARNING</priority>
                            <description>Now checking both has_ext_ip4 and has_ext_ip6. Right now we don't have internal machines with external addresses. Assume that only the availability of an IPv4 external IP conveys that this node is directly reachable from the internet. But also check for has_ext_ip6, so we can ignore this if there is no v6.

Better would be to check: (has_any_ip6 &amp;&amp; (has_ext_ip4 || has_ext_ip6))

XXX: temp, on Warning instead of High</description>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <request_method>POST</request_method>
                </discovery_rule>
                <discovery_rule>
                    <uuid>212c7f5b3cbb4c7c89461188e157974f</uuid>
                    <name>Firewall IPv4 chains</name>
                    <type>ZABBIX_ACTIVE</type>
                    <key>net.iptables.discover_chains</key>
                    <delay>15m</delay>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>cd15d0d0736546a9874ef46ea9a34e4e</uuid>
                            <name>Firewall IPv4 {#CHAIN} policy (0=accept)</name>
                            <type>ZABBIX_ACTIVE</type>
                            <key>net.iptables.policy[{#CHAIN}]</key>
                            <delay>30s</delay>
                            <history>1h</history>
                            <trends>90d</trends>
                            <units>ADR?</units>
                            <request_method>POST</request_method>
                            <tags>
                                <tag>
                                    <tag>Application</tag>
                                    <value>Firewall</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>de5cd41a5c424088ba066e725457868c</uuid>
                            <name>Firewall IPv4 {#CHAIN} rules</name>
                            <type>ZABBIX_ACTIVE</type>
                            <key>net.iptables.rules[{#CHAIN}]</key>
                            <delay>30s</delay>
                            <history>1h</history>
                            <trends>90d</trends>
                            <units>rules</units>
                            <request_method>POST</request_method>
                            <tags>
                                <tag>
                                    <tag>Application</tag>
                                    <value>Firewall</value>
                                </tag>
                            </tags>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <uuid>c326a20677be4506b58c5fef9eaba3c7</uuid>
                            <expression>{$HAS_DISASTER}=0 and {$DISABLE_FIREWALL}&lt;&gt;1 and
last(/Template OSSO Kernel Misc/net.has_ext_ip4)=1 and
(max(/Template OSSO Kernel Misc/net.iptables.policy[{#CHAIN}],#2)=0 and
 max(/Template OSSO Kernel Misc/net.iptables.rules[{#CHAIN}],#2)=0)</expression>
                            <name>No IPv4 firewall in chain {#CHAIN} on {HOST.NAME}</name>
                            <priority>HIGH</priority>
                        </trigger_prototype>
                        <trigger_prototype>
                            <uuid>64c3fa927b2c431c96113eae07d65283</uuid>
                            <expression>{$HAS_DISASTER}=1 and {$DISABLE_FIREWALL}&lt;&gt;1 and
last(/Template OSSO Kernel Misc/net.has_ext_ip4)=1 and
(max(/Template OSSO Kernel Misc/net.iptables.policy[{#CHAIN}],#2)=0 and
 max(/Template OSSO Kernel Misc/net.iptables.rules[{#CHAIN}],#2)=0)</expression>
                            <name>No IPv4 firewall in chain {#CHAIN} on {HOST.NAME}</name>
                            <priority>DISASTER</priority>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <request_method>POST</request_method>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$DISABLE_FIREWALL}</macro>
                    <value>0</value>
                </macro>
                <macro>
                    <macro>{$DISABLE_ZBXNOHW}</macro>
                    <value>0</value>
                </macro>
                <macro>
                    <macro>{$HAS_DISASTER}</macro>
                    <value>1</value>
                </macro>
                <macro>
                    <macro>{$KERNEL_SLABPCT}</macro>
                    <value>20</value>
                    <description>Expect less than N% kernel slab usage (increase on ZFS systems)</description>
                </macro>
            </macros>
        </template>
    </templates>
    <triggers>
        <trigger>
            <uuid>d30807598abd4a9cb071bb874d6a1277</uuid>
            <expression>(last(/Template OSSO Kernel Misc/kernel.mem.slab)*100/{$KERNEL_SLABPCT})&gt;last(/Template OSSO Kernel Misc/kernel.mem.total)</expression>
            <name>Kernel slab memory over {$KERNEL_SLABPCT}% on {HOST.NAME}</name>
            <opdata>Current: {ITEM.LASTVALUE1}</opdata>
            <priority>HIGH</priority>
        </trigger>
        <trigger>
            <uuid>ae0b61490b4e4264b2f3eedccf2e9f39</uuid>
            <expression>last(/Template OSSO Kernel Misc/kernel.emerg.count)&lt;&gt;0 or
last(/Template OSSO Kernel Misc/kernel.emerg.log)&lt;&gt;&quot;&quot;</expression>
            <name>{HOST.NAME} has kernel emergency</name>
            <opdata>{ITEM.LASTVALUE1}: {ITEM.LASTVALUE2}</opdata>
            <priority>HIGH</priority>
        </trigger>
    </triggers>
</zabbix_export>
