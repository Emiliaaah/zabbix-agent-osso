k8s-patroni
===========

The k8s patroni monitoring works by running a script as a sidecar.
This script writes all statuses available in the container to a configmap.
These configmaps are automatically discovered by the zabbix-agent.

To use the patroni monitoring you have to do the following steps:

1. Label the namespaces to be monitored with
   `ossobv/zabbix-agent-osso.k8s-patroni=true`.

2. Create an Ubuntu sidecar in all patroni pods to be monitored.

3. Give this sidecar a serviceaccount to create configmaps.

4. Mount the script (below) to the sidecar, and make it run in a loop.

5. Load the template and enable the template for the hosts:

   - The hosts should have kubectl and access to the cluster and namespaces.
   - You have to manually create the configmaps the first time.
   - The serviceaccount needs only patch permissions, and can be limited
     to only the monitored namespaces.

Script:

    # FIXME: secret in args!
    CA_CERT=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    while :; do
        STATUS=$(curl localhost:8008/cluster -s | sed 's/"/\\"/g' )
        PAYLOAD='[{"op":"replace","path":"/data/status","value":"'"${STATUS}"'"}]'
        curl --cacert ${CA_CERT} \
          --header "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
          --header "Content-Type: application/json-patch+json" --request PATCH --data "${PAYLOAD}" \
          https://kubernetes.default.svc:443/api/v1/namespaces/${POD_NAMESPACE}/configmaps/${POD_NAME}
        sleep 30
    done
