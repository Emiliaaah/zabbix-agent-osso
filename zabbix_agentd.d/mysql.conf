# [This file is part of the zabbix-agent-osso package]
#
# === SETUP ===
#
# # mkdir /etc/zabbix/mysql && cat /etc/zabbix/mysql/.my.cnf <<EOF
# [client]
# user=zabbix-check
# password=supersecretpasswd
# EOF
# # chown zabbix /etc/zabbix/mysql/.my.cnf
# # chmod 0400 /etc/zabbix/mysql/.my.cnf
#
# mysql> CREATE USER 'zabbix-check'@'localhost' IDENTIFIED BY 'supersecretpasswd';
#
# # For replication monitoring you'll also need this.
# # For the mysql.size[*] checks you'll need even more.
# mysql> GRANT REPLICATION CLIENT ON *.* TO 'zabbix-check'@'localhost';
#
# === END SETUP ===
#

# MySQL client version
UserParameter=mysql.version, mysql -V

# MySQL checks
UserParameter=mysql.status[*], HOME=/etc/zabbix/mysql mysql -Ne "SHOW GLOBAL STATUS WHERE variable_name='$1';" 2>/dev/null | awk '{print $$2} END {if(!NR)print 0}'
UserParameter=mysql.system[*], HOME=/etc/zabbix/mysql mysql -Ne "SHOW VARIABLES LIKE '$1';" 2>/dev/null | awk '{print $$2} END {if(!NR)print 0}'
UserParameter=mysql.ping, HOME=/etc/zabbix/mysql timeout 2s mysqladmin ping 2>/dev/null | grep -c alive

# MySQL replication
UserParameter=mysql.slave_io_running, HOME=/etc/zabbix/mysql mysql -e 'SHOW SLAVE STATUS\G' | awk '/^ *Slave_IO_Running:/{if($2=="Yes"){i=1;print 1}} END{if(!i)print 0}'
UserParameter=mysql.slave_sql_running, HOME=/etc/zabbix/mysql mysql -e 'SHOW SLAVE STATUS\G' | awk '/^ *Slave_SQL_Running:/{if($2=="Yes"){i=1;print 1}} END{if(!i)print 0}'
UserParameter=mysql.seconds_behind_master, HOME=/etc/zabbix/mysql mysql -e 'SHOW SLAVE STATUS\G' | awk '/^ *Seconds_Behind_Master:/{i=1;print $2} END{if(!i)print 9999}'

# Galera: we use mysql.status_galera instead of mysql.status.
UserParameter=mysql.status_galera[*], HOME=/etc/zabbix/mysql mysql -Ne "SHOW STATUS LIKE '$1';" 2>/dev/null | awk '{print $$2} END {if(!NR)print 0}'
# DEPRECATED! DO NOT USE! WILL BE REMOVED ASAP!
UserParameter=mysql.galera[*], HOME=/etc/zabbix/mysql mysql -Ne "SHOW STATUS LIKE '$1';" 2>/dev/null | awk '{print $$2} END {if(!NR)print 0}'

# Flexible parameter to determine database or table size.
# * On the frontend side, use keys like mysql.size[zabbix,history,data].
# * Key syntax is mysql.size[<database>,<table>,<type>].
# * Database may be a database name or "all". Default is "all".
# * Table may be a table name or "all". Default is "all".
# * Type may be "data", "index", "free" or "both". Both is a sum of data
#   and index. Default is "both".
# * Database is mandatory if a table is specified. Type may be specified
#   always.
# * Returns value in bytes.
# * 'sum' on data_length or index_length only needed when we are getting
#   this information for whole database instead of a single table
# (Original source: zabbix-agent userparameter_mysql.conf)
UserParameter=mysql.size[*], bash -c 'echo "select sum($(case "$3" in both|"") echo "data_length+index_length";; data|index) echo "$3_length";; free) echo "data_free";; esac)) from information_schema.tables$([[ "$1" = "all" || ! "$1" ]] || echo " where table_schema=\"$1\"")$([[ "$2" = "all" || ! "$2" ]] || echo "and table_name=\"$2\"");" | HOME=/etc/zabbix/mysql mysql -N'
